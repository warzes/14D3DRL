#include "stdafx.h"
#include "Engine.h"
#include "CoreMath.h"
//-----------------------------------------------------------------------------
#if defined(_MSC_VER)
#	pragma comment( lib, "OpenGL32.lib" )
#endif

//сделать движение камеры мышкой
//
//как устроен тайловый мир
//	TextureManager - грузит текстуры, выдает id текстуры	
//	struct tile
//	{
//		enum type {solid, free};
//		tiledesc* desc = nullptr;
//	};
//
//	struct tiledesc
//	{
//		plane[6];
//
//	};
//
//	для чего так? я рисую не куб, а шесть его сторон. Это дает возможность накладывать разные текстуры. Если эту инфу хранить внутри тайла (а в будущем сюда добавятся модификаторы вершин), то это будет перерасход памяти (так как больше половины карты - пустые тайлы).
//		поэтому есть класс tiledesc, который описывает определенный куб с набором текстур (при этом если текстуры совпадают, то используется ссылка, а не создается новый)
//		tiledesc хранятся в массиве (при добавлении в него проверяется есть ли такие с таким же набором текстур и прочих характеристик)
//
//	В tilemap есть только один VAO который рисует плоскость (НЕ КУБ).Так вот, при рендере просто эта плоскость много раз отрисовывается(с поворатами).Для эффективности сначала рисуется только на перед, потом на бок, потом наверх и т.д. (чтобы меньше юниформ дергать) Также сортировка по текстурам.Также отбрасывание закрытых стен, и дальних(рисовать только ближние)
//		а в будущем заменить на инстансинг



//-----------------------------------------------------------------------------
bool GameAppInit();
void GameAppUpdate();
void GameAppFrame();
void GameAppClose();
//-----------------------------------------------------------------------------
int main([[maybe_unused]] int argc, [[maybe_unused]] char* argv[])
{
	Engine engine;

	if (engine.Init())
	{
		if (GameAppInit())
		{
			while (engine.Update())
			{
				GameAppUpdate();
				engine.BeginFrame();
				GameAppFrame();
				engine.EndFrame();
			}
		}
		GameAppClose();
	}
	engine.Close();
}
//-----------------------------------------------------------------------------